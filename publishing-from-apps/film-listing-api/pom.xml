<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>com.orbitalhq.demos</groupId>
      <artifactId>publishing-from-apps</artifactId>
      <version>1.0-SNAPSHOT</version>
   </parent>

   <artifactId>film-listing-api</artifactId>

   <properties>
      <wire.version>4.1.0</wire.version>
      <app.main.class>com.petflix.v2.listings.FilmListingsApp</app.main.class>
      <app.distribution.directory>${project.build.directory}/distributions/app</app.distribution.directory>

   </properties>

   <dependencies>
      <dependency>
         <groupId>org.jetbrains.kotlinx</groupId>
         <artifactId>kotlinx-serialization-core-jvm</artifactId>
         <version>1.4.1</version>
      </dependency>
      <dependency>
         <groupId>demo.vyne</groupId>
         <artifactId>films-taxonomy</artifactId>
         <version>0.1.0</version>
      </dependency>

      <!-- Wire lets us read and compile protobufs at runtime.
      Nothing to do with Orbital, but a neat trick in the demo -->
      <dependency>
         <groupId>com.squareup.wire</groupId>
         <artifactId>wire-compiler</artifactId>
         <version>${wire.version}</version>
      </dependency>

      <dependency>
         <groupId>com.squareup.wire</groupId>
         <artifactId>wire-schema</artifactId>
         <version>${wire.version}</version>
      </dependency>
      <dependency>
         <groupId>com.squareup.wire</groupId>
         <artifactId>wire-runtime</artifactId>
         <version>${wire.version}</version>
      </dependency>

      <dependency>
         <groupId>org.springframework.kafka</groupId>
         <artifactId>spring-kafka</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-web</artifactId>
      </dependency>
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>schema-rsocket-publisher</artifactId>
         <version>${orbital.version}</version>
      </dependency>
      <dependency>
         <groupId>org.taxilang</groupId>
         <artifactId>java2taxi</artifactId>
         <version>${taxi.version}</version>
      </dependency>
      <dependency>
         <groupId>org.taxilang</groupId>
         <artifactId>java-spring-taxi</artifactId>
         <version>${taxi.version}</version>
      </dependency>
   </dependencies>
   <build>
      <plugins>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>appassembler-maven-plugin</artifactId>
            <version>1.10</version>
            <executions>
               <execution>
                  <id>assemble-script</id>
                  <phase>package</phase>
                  <goals>
                     <goal>assemble</goal>
                  </goals>
                  <configuration>
                     <showConsoleWindow>true</showConsoleWindow>
                     <programs>
                        <program>
                           <mainClass>${app.main.class}</mainClass>
                           <id>films-api</id>
                        </program>
                     </programs>
                     <repositoryLayout>flat</repositoryLayout>
                     <repositoryName>lib</repositoryName>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>3.3.0</version>
            <configuration>
               <descriptors>
                  <descriptor>src/main/assembly/assembly.xml</descriptor>
               </descriptors>
               <appendAssemblyId>false</appendAssemblyId>
               <finalName>films-api</finalName>
            </configuration>
            <executions>
               <execution>
                  <id>make-assembly</id> <!-- this is used for inheritance merges -->
                  <phase>package</phase> <!-- bind to the packaging phase -->
                  <goals>
                     <goal>single</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
               <executable>false</executable>
               <layout>DIR</layout>
            </configuration>
            <executions>
               <execution>
                  <goals>
                     <goal>build-info</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>
</project>
